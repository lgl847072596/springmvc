<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
">
	<context:component-scan base-package="com.my.web" />
	
	<context:property-placeholder location="classpath:mysql.properties"/>
	
	<!-- c3p0连接池配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driverClass}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<property name="maxPoolSize" value="${mysql.maxPoolSize}" />
		<property name="minPoolSize" value="${mysql.minPoolSize}" />
		<property name="initialPoolSize" value="${mysql.initialPoolSize}" />
		<property name="maxIdleTime" value="${mysql.maxIdleTime}" />
		<property name="acquireIncrement" value="${mysql.acquireIncrement}" />
	</bean>

	<!-- hibernate 配置数据源 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="packagesToScan">
			<list>
				<value>com.my.web.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hiberante.format_sql">true</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- <prop key="hibernate.connection.release_mode">after_statement</prop> -->
			</props>
		</property>
	</bean>
  <!-- mybatis配置 -->
  
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"></property>
       <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"></property>
  </bean>
  <!-- dao接口映射 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="com.my.web.dao.mybatis"></property>
      <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
  </bean>
  
  
   <!-- 配置事务管理器 -->
  <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"></property>
  </bean>

  <!-- 注解方式配置事物 -->
  <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

  <!-- 拦截器方式配置事物 -->
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" />
      <tx:method name="save*" />
      <tx:method name="update*" />
      <tx:method name="modify*" />
      <tx:method name="edit*" />
      <tx:method name="delete*" />
      <tx:method name="remove*" />
      <tx:method name="repair" />
      <tx:method name="deleteAndRepair" />

      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="find*" propagation="SUPPORTS" />
      <tx:method name="load*" propagation="SUPPORTS" />
      <tx:method name="search*" propagation="SUPPORTS" />
      <tx:method name="datagrid*" propagation="SUPPORTS" />

      <tx:method name="*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>
  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="execution(* com.my.web.service..*Impl.*(..))" />
    <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
  </aop:config>

</beans>